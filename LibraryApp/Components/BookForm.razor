@using Models
@inject DialogService DialogService

<RadzenDialog>
    <ChildContent>
        <EditForm Model="@Book" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <RadzenStack Gap="1rem">
                <RadzenFormField Text="ISBN" Variant="Variant.Outlined">
                    <RadzenTextBox @bind-Value="Book.ISBN" />
                </RadzenFormField>
                <RadzenFormField Text="Title" Variant="Variant.Outlined">
                    <RadzenTextBox @bind-Value="Book.Title" />
                </RadzenFormField>
                <RadzenFormField Text="Author" Variant="Variant.Outlined">
                    <RadzenTextBox @bind-Value="Book.Author" />
                </RadzenFormField>
                <RadzenFormField Text="Published Year" Variant="Variant.Outlined">
                    <RadzenNumeric @bind-Value="Book.PublishedYear" />
                </RadzenFormField>
                <RadzenFormField Text="Total Copies" Variant="Variant.Outlined">
                    <RadzenNumeric @bind-Value="Book.TotalCopies" />
                </RadzenFormField>
                <RadzenFormField Text="Copies Available" Variant="Variant.Outlined">
                    <RadzenNumeric @bind-Value="Book.CopiesAvailable" />
                </RadzenFormField>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Click="Cancel" />
                </RadzenStack>
            </RadzenStack>
        </EditForm>
    </ChildContent>
</RadzenDialog>

@code {
    [Parameter] public Book Book { get; set; } = new();

    void Submit()
    {
        DialogService.Close(Book);
    }

    void Cancel()
    {
        DialogService.Close(null);
    }
}
